def writeln_str = \IO io [128 x char] s -> IO
  let io2 = write(io s)
  write(io2 "\n")

def any = \bool a -> bool
  a

def any = \bool a GENERIC_REMAINING remaining -> bool
  OR a any(remaining)

def read_token = \IO io mut [128 x char] buff int idx -> <[128 x char] IO>
  let res = call readc io end
  let io2 = GET res 0
  let c = GET res 1
  if any(LT c 0
         EQ CAST char c ' '
         EQ CAST char c '\n'
         GE idx 127)
    <buff io2>
  else
    let newbuff = SET buff idx CAST char c
    read_token(io2 newbuff ADD idx 1)

def main = \IO io -> IO
  let res = read_token(io zero as mut [128 x char] 0)
  writeln_str(GET res 1 GET res 0)
