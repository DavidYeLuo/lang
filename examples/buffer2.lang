def writeln = \IO io [4 x char] s -> IO
  let io2 = write(io s)
  write(io2 "\n")

def read_from_buff = \IO io [3 x [4 x char]] buff int x -> IO
  if GE x 3
    io
  else
    let newio = writeln(io GET [4 x char] buff x)
    read_from_buff(newio buff ADD x 1)

def func = \[4 x char] s bool cond -> [4 x char]
  if cond s else zero as [4 x char]

def write_to_buff = \mut GENERIC buff int x [4 x char] s bool cond -> mut [3 x [4 x char]]
  let v = func(s cond)
  SET buff x v

def main = \IO io -> IO
  let buff = zero as mut [3 x [4 x char]]
  let buff2 = write_to_buff(buff 0 "abc" true)
  let buff3 = write_to_buff(buff2 1 "xyz" false)
  let buff4 = write_to_buff(buff3 2 "123" true)
  read_from_buff(io buff4 0)
